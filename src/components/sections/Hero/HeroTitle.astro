---
const phrase =
  "Technology is the first art form capable of empowering ideas — and reshaping reality.";

// Important space at the end of the word. And replace __ in case we want to animate groups of words.
const words = phrase.split(" ").map((word) => `${word.replace("__", " ")} `);
---

<h3
  data-ignore-sizing
  data-component="page-title"
  class="text-over-card 3xl:text-6xl relative z-30 mx-auto mt-24 mb-12 w-full p-6 text-center text-2xl text-balance md:w-3/4 md:p-0 md:text-4xl lg:w-2/3 xl:text-5xl 2xl:text-6xl"
>
  {words.map((word) => <span class="hero-title to-animate">{word}</span>)}
</h3>
<style>
  .hero-title {
    position: relative;
    will-change: opacity, transform;
    opacity: 0;
    transition: none !important;
  }

  [data-component="page-title"]::before,
  [data-component="page-title"]::after {
    position: absolute;
    font-size: 500%;
    opacity: 0.1;
    top: -30%;
    color: var(--color-over-card);
  }

  [data-component="page-title"]::before {
    content: "“";
    left: 20%;
  }
  [data-component="page-title"]::after {
    content: "”";
    right: 20%;
  }

  @media (width >= 96rem) /** 2XL */ {
    [data-component="page-title"]::before,
    [data-component="page-title"]::after {
      top: -70%;
    }

    [data-component="page-title"]::before {
      left: 0%;
    }
    [data-component="page-title"]::after {
      right: 0%;
    }
  }
</style>
<script>
  import { gsap } from "gsap";

  const heroTitles = document.querySelectorAll(".to-animate");
  const heroTlOne = gsap
    .timeline({
      paused: true,
      defaults: {
        ease: "power2.inOut",
        duration: 1,
      },
    })
    .to(heroTitles, {
      opacity: 0,
      translateY: -30,
      duration: 0.001,
    })
    .to(heroTitles, {
      opacity: 1,
      translateY: 0,
      stagger: {
        each: 0.03,
        from: "edges",
      },
    });

  const heroTlTwo = gsap
    .timeline({
      paused: true,
      defaults: {
        ease: "none",
      },
    })
    .to(heroTitles, {
      opacity: 0,
      translateY: 0,
      duration: 0.001,
    })
    .to(heroTitles, {
      opacity: 1,
      translateY: 0,
      duration: 0.001,
      stagger: {
        each: 0.05,
        from: "random",
      },
    });

  heroTlOne.play(0).delay(2);

  const toggleAnimation = () => {
    const themeContext = document.querySelector(`[data-theme-context="nick"]`);
    if (!themeContext) return;

    const currentTheme = Number(themeContext.getAttribute("data-theme") || 0);
    const tl = currentTheme === 0 ? heroTlOne : heroTlTwo;
    const lastTl = currentTheme === 0 ? heroTlTwo : heroTlOne;
    lastTl.pause(0);
    tl.restart();
  };
  window.addEventListener("themeChanged", toggleAnimation);
</script>
